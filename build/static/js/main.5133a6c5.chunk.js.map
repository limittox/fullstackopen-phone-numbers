{"version":3,"sources":["services/numbers.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","Person","person","persons","setPersons","name","number","onClick","window","confirm","numberService","filter","Persons","newPersons","toUpperCase","startsWith","map","key","PersonsForm","addPerson","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","value","onChange","type","Filter","handleFilterChange","App","useState","setNewName","setNewNumber","setFilter","errorMsg","setErrorMsg","useEffect","then","response","data","event","target","className","preventDefault","newPerson","exists","forEach","returnedPerson","catch","error","setTimeout","n","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5133a6c5.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default { getAll, create, update, deletePerson }","import React, { useState, useEffect } from 'react'\nimport numberService from './services/numbers';\nimport './app.css'\n\nconst Person = ({ person, persons, setPersons }) => {\n  const deletePeson = (id) => {\n    if (window.confirm(`Do you want to delete ${person.name}`)) {\n      numberService\n        .deletePerson(id)\n      setPersons(persons.filter(person => person.id !== id))\n    }\n  }\n\n  return <p>{person.name} {person.number} <button onClick={()=>deletePeson(person.id)}>delete</button></p>  \n}\n\nconst Persons = ({ persons, filter, setPersons }) => {\n  const newPersons = persons.filter(person => person.name.toUpperCase().startsWith(filter.toUpperCase()))\n  return (\n    <>\n      {newPersons.map(person => {\n        return <Person key={person.name} person={person} persons={persons} setPersons={setPersons} />    \n      }\n      )}\n    </>\n  )\n}\n\nconst PersonsForm = ({ addPerson, newName, newNumber, handleNameChange, handleNumberChange }) => {\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n      <div>debug: {newName}</div>\n    </form>\n  )\n}\n\nconst Filter = ({ filter, handleFilterChange }) => {\n  return (\n    <div>\n      filter shown with: <input value={filter} onChange={handleFilterChange} />\n    </div>\n  )\n}\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ errorMsg, setErrorMsg ] = useState('')\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //     numberService\n  //     .getAll()\n  //     .then(response => {\n  //       setPersons(response.data)\n  //     })\n  //   }, 500)\n  // }, [persons])\n\n  useEffect(() => {\n    numberService\n    .getAll()\n    .then(response => {\n      setPersons(response.data)\n    })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  // Add a new person and phone number\n  const addPerson = (event) => {\n    event.preventDefault()\n    \n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    let exists = -1\n    persons.forEach(person => {\n      if (person.name === newName)\n        exists = person.id\n    })\n\n    if (exists !== -1) {\n      numberService\n        .update(exists, newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.map(person => person.id === exists ? returnedPerson.data : person))\n        })\n        .catch(error => {\n          setErrorMsg(\n            `Note '${newPerson.newName}' was already removed from server`\n          )\n          setTimeout(() => {\n            setErrorMsg(null)\n          }, 5000)\n          setPersons(persons.filter(n => n.id !== newPerson.newNumber))\n        })\n\n    } else {\n      numberService\n        .create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson.data))\n        })\n      setTimeout(() => {\n        setErrorMsg(``)\n      }, 5000)\n      setErrorMsg(`Added ${newName}`)\n      setNewName('')\n      setNewNumber('')\n    }\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n        <Filter filter={filter} handleFilterChange={handleFilterChange} />\n      <h2>add a new</h2>\n        {(errorMsg !== '') && <p className=\"success\">{errorMsg}</p>}  \n        <PersonsForm addPerson={addPerson} newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n        <Persons persons={persons} filter={filter} setPersons={setPersons} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}